{"version":3,"sources":["config/firebase/firebaseAuth.js","components/layout/Navbar.js","components/crud/table/TableHeading.js","components/crud/table/TableItem.style.js","components/crud/table/TableItem.js","config/firebase/firebaseDB.js","components/crud/Edit.js","components/crud/Delete.js","components/crud/Read.js","components/crud/Add.js","components/Dashboard.js","components/Login.js","config/redux/Reducer.js","config/redux/Store.js","App.js","index.js"],"names":["init","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAuth","getAuth","Navbar","React","anchorEl","setAnchorEl","open","Boolean","style","color","undefined","onClick","event","currentTarget","size","Menu","id","onClose","MenuListProps","MenuItem","signOut","toast","success","useStyles","makeStyles","theme","tableRowRoot","fontSize","padding","paddingLeft","paddingRight","TableHeading","props","classes","TableRow","className","TableCell","width","maxWidth","tableCell","whiteSpace","anchar","palette","primary","main","borderBottom","display","badgeRoot","borderRadius","TableItem","data","openUpdate","openDelete","sx","border","Stack","direction","spacing","IconButton","selected","align","nama","harga","qty","axios","create","baseURL","dialogBox","position","formRoot","height","flexDirection","paddingTop","breakpoints","up","pointer","cursor","textareaAutosizeRoot","backgroundColor","background","paper","text","btnRoot","scrollRoot","Edit","isOpen","close","type","refresh","useState","isSubmit","setIsSubmit","validationSchema","yup","required","min","idBarang","barang","formik","useFormik","initialValues","onSubmit","res","firebaseDB","put","then","result","console","log","catch","error","message","updateData","useEffect","Dialog","Box","py","px","alignItems","grey","component","mb","Container","Grid","container","justifyContent","item","xs","paddingBottom","handleSubmit","TextField","fullWidth","name","label","value","values","onChange","handleChange","touched","errors","helperText","Button","disabled","margin","variant","defaultProps","connection","Delete","Typography","fontStyle","delete","Read","dataArr","isUpdate","setIsUpdate","isDelete","setIsDelete","selectedData","setSelectedData","selectedId","setSelectedId","TableContainer","Paper","Table","minWidth","TableHead","TableBody","map","Add","post","saveData","barangs","Dashboard","history","useHistory","hideButton","setHideButton","isOpenAdd","setOpenAdd","isData","setData","getData","get","results","fetchedResults","key","unshift","arr","Object","keys","t","push","onAuthStateChanged","user","fontFamily","Login","email","setEmail","password","setPassword","isAlert","setAlert","alertContent","setAlertContent","handleChangeField","e","target","Alert","severity","preventDefault","signInWithEmailAndPassword","userCredential","isAnonymous","initialState","popup","isLogin","reducer","state","action","store","createStore","applyMiddleware","thunk","App","path","exact","ReactDOM","render","Fragment","document","getElementById"],"mappings":"6SAaMA,EAAOC,YAVU,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJC,EAAeC,YAAQV,G,0CCPrB,SAASW,IACtB,MAAgCC,WAAe,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GAYrB,OACE,gCACE,cAAC,IAAD,CACEI,MAAO,CAACC,MAAM,SACd,gBAAc,aACd,gBAAc,OACd,gBAAeH,EAAO,YAASI,EACzBC,QAlBQ,SAACC,GACnBP,EAAYO,EAAMC,gBAkBRC,KAAK,QANb,uBAUA,cAACC,EAAA,EAAD,CACEC,GAAG,aACHZ,SAAUA,EACVE,KAAMA,EACNW,QAxBc,WAClBZ,EAAY,OAwBRa,cAAe,CACb,kBAAmB,gBANvB,SASE,cAACC,EAAA,EAAD,CAAUR,QA1BK,WACnBX,EAAaoB,UACZC,QAAMC,QAAQ,2BAwBX,yB,mECpCFC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,aAAc,CACZ,OAAQ,CACNC,SAAU,GACVC,QAAS,GACT,gBAAiB,CACfC,YAAa,IAEf,eAAgB,CACdC,aAAc,SAsCPC,EAhCM,SAACC,GACpB,IAAMC,EAAUV,EAAUS,GAC1B,OACE,eAACE,EAAA,EAAD,CAAUC,UAAWF,EAAQP,aAA7B,UACE,cAACU,EAAA,EAAD,CACE5B,MAAO,CACL6B,MAAO,IAFX,qBAMA,cAACD,EAAA,EAAD,CACE5B,MAAO,CACL8B,SAAU,MAFd,yBAMA,cAACF,EAAA,EAAD,CACE5B,MAAO,CACL8B,SAAU,MAFd,mBAMA,cAACF,EAAA,EAAD,CACE5B,MAAO,CACL8B,SAAU,MAFd,qBChBSf,EA1BGC,aAAW,SAACC,GAAD,MAAY,CACvCc,UAAW,CACTZ,SAAU,GACVC,QAAS,EACTY,WAAY,SACZ,gBAAiB,CACfX,YAAa,IAEf,eAAgB,CACdC,aAAc,KAGlBU,WAAY,CACVA,WAAY,WAEdC,OAAQ,CACNhC,MAAOgB,EAAMiB,QAAQC,QAAQC,KAC7BC,aAAa,aAAD,OAAepB,EAAMiB,QAAQC,QAAQC,MACjDE,QAAS,gBAEXC,UAAW,CACTnB,QAAS,WACToB,aAAc,EACdF,QAAS,oB,sDCcEG,EA7BG,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KAAOC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WACrB7B,IAEhB,OACE,eAACW,EAAA,EAAD,CAEImB,GAAI,CAAE,mCAAoC,CAAEC,OAAQ,IAFxD,UAII,cAAClB,EAAA,EAAD,UACA,eAACmB,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,UACI,cAACC,EAAA,EAAD,CAAY,aAAW,SAAS/C,QAAS,WACjCyC,EAAWF,EAAKS,WADxB,SAGI,cAAC,IAAD,MAEJ,cAACD,EAAA,EAAD,CAAY,aAAW,OAAO/C,QAAS,WAC/BwC,EAAWD,EAAKS,WADxB,SAGI,cAAC,IAAD,WAIR,cAACvB,EAAA,EAAD,CAAWwB,MAAM,OAAjB,SAAyBV,EAAKW,OAC9B,cAACzB,EAAA,EAAD,CAAWwB,MAAM,OAAjB,SAAyBV,EAAKY,QAC9B,cAAC1B,EAAA,EAAD,CAAWwB,MAAM,OAAjB,SAAyBV,EAAKa,QAnBzBb,EAAKlC,K,qECbHgD,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAQ,kF,SCQJ3C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,UAAW,CACTC,SAAU,WACV,4BAA6B,CAC3B9B,SAAU,IACVD,MAAO,QAET,sBAAuB,IAGzBgC,SAAS,aACPhC,MAAO,OACPiC,OAAQ,OACRxB,QAAS,OACTyB,cAAe,SACfC,WAAY,IACX/C,EAAMgD,YAAYC,GAAG,MAAQ,IAEhCC,QAAS,CACPC,OAAQ,WAEVC,qBAAsB,CACpBxC,MAAO,OACPiB,OAAQ,SACRwB,gBAAiBrD,EAAMiB,QAAQqC,WAAWC,MAC1CvE,MAAOgB,EAAMiB,QAAQuC,KAAKtC,SAE5BuC,QAAS,CACPrD,YAAa,GACbC,aAAc,IAEhBqD,WAAY,CACVb,OAAQ,SAINc,EAAO,SAACpD,GACV,IAAQqD,EAAiCrD,EAAjCqD,OAAQC,EAAyBtD,EAAzBsD,MAAOC,EAAkBvD,EAAlBuD,KAAMC,EAAYxD,EAAZwD,QAC7B,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAmBC,IAAW,CACpChC,KAAMgC,IACM,6CACPC,SAAS,iCACdhC,MAAO+B,IACK,8CACPE,IAAI,EAAG,yBACPD,SAAS,kCACd/B,IAAK8B,IACO,8CACPC,SAAS,oCAERE,EAAWhE,EAAMiE,OAAOjF,GAkBxBkF,EAASC,YAAU,CACrBC,cAAe,CACfvC,KAAO7B,EAAMiE,OAAOpC,KACZ7B,EAAMiE,OAAOpC,KACb,GACRC,MAAO9B,EAAMiE,OAAOnC,MACZ9B,EAAMiE,OAAOnC,MAAQ,GAC7BC,IAAK/B,EAAMiE,OAAOlC,IACV/B,EAAMiE,OAAOlC,IAAM,IAE3B6B,iBAAkBA,EAClBS,SAAU,SAACnD,GACPyC,GAAY,GACA,UAARJ,EA9BO,SAAC1B,EAAMC,EAAOC,GAC7B,IAAMuC,EAAMC,EAAWC,IAAI,YAAYR,EAAS,QAAS,CACrDnC,KAAMA,EACNC,MAAOA,EACPC,IAAKA,IAETuC,EAAIG,MAAK,SAACC,GACNC,QAAQC,IAAIF,GACZrF,gBAAM,kCACNiE,IACAE,OAEJc,EAAIO,OAAM,SAACC,GACPzF,QAAMyF,MAAMA,EAAMC,YAkBhBC,CAAW9D,EAAKW,KAAMX,EAAKY,MAAOZ,EAAKa,KAEvC1C,QAAMyF,MAAM,wBAMxBG,qBAAU,cACP,IAEH,IAAMhF,EAAUV,EAAUS,GAE1B,OACE,eAACkF,EAAA,EAAD,CACE5G,KAAM+E,EACNpE,QAAS,kBAAMqE,KACf,kBAAgB,qBAChB,mBAAiB,2BACjBnD,UAAWF,EAAQkC,UALrB,UAME,cAACgD,EAAA,EAAD,CACEC,GAAI,EACJC,GAAI,EACJvE,QAAQ,OACRyB,cAAc,MACd+C,WAAW,SACXzE,aAAY,oBAAe0E,IAAK,MANlC,SAOE,cAACJ,EAAA,EAAD,CAAKK,UAAU,KAAKC,GAAI,EAAxB,sBAIA,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACpH,MAAO,CAAEqH,eAAgB,UAAzC,SACI,cAACF,EAAA,EAAD,CAAMG,MAAM,EAAMC,GAAI,GAAIvH,MAAO,CAAGwH,cAAe,MAAnD,SAEK,uBAAM3B,SAAUH,EAAO+B,aAAvB,UACG,cAACC,EAAA,EAAD,CACIC,WAAS,EACTnH,GAAG,OACHoH,KAAK,OACLC,MAAM,cACNC,MAAOpC,EAAOqC,OAAO1E,KACrB2E,SAAUtC,EAAOuC,aACjB3B,MAAOZ,EAAOwC,QAAQ7E,MAAQtD,QAAQ2F,EAAOyC,OAAO9E,MACpD+E,WAAY1C,EAAOwC,QAAQ7E,MAAQqC,EAAOyC,OAAO9E,OAErD,cAACqE,EAAA,EAAD,CACIC,WAAS,EACTnH,GAAG,QACHoH,KAAK,QACLC,MAAM,QACN9C,KAAK,OACL+C,MAAOpC,EAAOqC,OAAOzE,MACrB0E,SAAUtC,EAAOuC,aACjB3B,MAAOZ,EAAOwC,QAAQ5E,OAASvD,QAAQ2F,EAAOyC,OAAO7E,OACrD8E,WAAY1C,EAAOwC,QAAQ5E,OAASoC,EAAOyC,OAAO7E,QAEtD,cAACoE,EAAA,EAAD,CACIC,WAAS,EACTnH,GAAG,MACHoH,KAAK,MACLC,MAAM,MACN9C,KAAK,OACL+C,MAAOpC,EAAOqC,OAAOxE,IACrByE,SAAUtC,EAAOuC,aACjB3B,MAAOZ,EAAOwC,QAAQ3E,KAAOxD,QAAQ2F,EAAOyC,OAAO5E,KACnD6E,WAAY1C,EAAOwC,QAAQ3E,KAAOmC,EAAOyC,OAAO5E,MAEpD,eAAC4D,EAAA,EAAD,CAAM/D,MAAM,QAAQkE,MAAM,EAAMtH,MAAO,CAACgE,WAAW,MAAnD,UACA,cAACqE,EAAA,EAAD,CAASC,SAAUpD,EAAUH,KAAK,SAASwD,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,UAAlG,kBAGA,cAACoI,EAAA,EAAD,CAAQlI,QAAS2E,EAAOyD,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,YAA/E,oCAaT2E,KAEfA,EAAK6D,aAAe,CAClBC,WAAY,KACZhG,KAAM,CAACkF,KAAM,IACbnC,OAAQ,I,cChLJ1E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0C,UAAW,CACTC,SAAU,WACV,4BAA6B,CAC3B9B,SAAU,IACVD,MAAO,QAET,sBAAuB,IAGzBgC,SAAS,aACPhC,MAAO,OACPiC,OAAQ,OACRxB,QAAS,OACTyB,cAAe,SACfC,WAAY,IACX/C,EAAMgD,YAAYC,GAAG,MAAQ,IAEhCC,QAAS,CACPC,OAAQ,WAEVC,qBAAsB,CACpBxC,MAAO,OACPiB,OAAQ,SACRwB,gBAAiBrD,EAAMiB,QAAQqC,WAAWC,MAC1CvE,MAAOgB,EAAMiB,QAAQuC,KAAKtC,SAE5BuC,QAAS,CACPrD,YAAa,GACbC,aAAc,IAEhBqD,WAAY,CACVb,OAAQ,SAIN6E,GAAS,SAACnH,GACZ,IAAQqD,EAA2BrD,EAA3BqD,OAAQC,EAAmBtD,EAAnBsD,MAAOE,EAAYxD,EAAZwD,QACjBQ,EAAWhE,EAAMiE,OAAOjF,GAa1BiB,EAAUV,GAAUS,GAE1B,OACE,eAACkF,EAAA,EAAD,CACE5G,KAAM+E,EACNpE,QAAS,kBAAMqE,KACf,kBAAgB,qBAChB,mBAAiB,2BACjBnD,UAAWF,EAAQkC,UALrB,UAME,cAACgD,EAAA,EAAD,CACEC,GAAI,EACJC,GAAI,EACJvE,QAAQ,OACRyB,cAAc,MACd+C,WAAW,SACXzE,aAAY,oBAAe0E,IAAK,MANlC,SAOE,cAACJ,EAAA,EAAD,CAAKK,UAAU,KAAKC,GAAI,EAAxB,sBAIF,eAACC,EAAA,EAAD,WACE,eAAC0B,GAAA,EAAD,CAAY5I,MAAO,CAAC6I,UAAU,UAA9B,uDAC2CrH,EAAMiE,OAAOpC,KADxD,yBACoF7B,EAAMiE,OAAOlC,IADjG,UAGA,eAAC4D,EAAA,EAAD,CAAM/D,MAAM,QAAQkE,MAAM,EAAMtH,MAAO,CAACgE,WAAW,KAAMwD,cAAc,MAAvE,UACA,cAACa,EAAA,EAAD,CAAQlI,QArCO,WACf,IAAM2F,EAAMC,EAAW+C,OAAO,YAAYtD,EAAS,SACnDM,EAAIG,MAAK,SAACC,GAENrF,gBAAM,mCACNiE,IACAE,OAEJc,EAAIO,OAAM,SAACC,GACPzF,QAAMyF,MAAMA,EAAMC,aA4BOgC,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,YAApF,oBAGA,cAACoI,EAAA,EAAD,CAAQlI,QAAS2E,EAAOyD,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,UAA/E,8BASO0I,MAEfA,GAAOF,aAAe,CACpBC,WAAY,KACZhG,KAAM,CAACkF,KAAM,IACbnC,OAAQ,IC3FV,IAuEesD,GAvEF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAAShE,EAAa,EAAbA,QACpB,EAAgCC,oBAAS,GAAzC,mBAAOgE,EAAP,KAAiBC,EAAjB,KACA,EAAgCjE,oBAAS,GAAzC,mBAAOkE,EAAP,KAAiBC,EAAjB,KACA,EAAwCnE,mBAAS,IAAjD,mBAAOoE,EAAP,KAAqBC,EAArB,KACA,EAAoCrE,qBAApC,mBAAOsE,EAAP,KAAmBC,EAAnB,KAKM7G,EAAa,SAACnC,GAChB8I,EAAgBN,EAAQxI,IACxBgJ,EAAchJ,GACd0I,GAAY,IAKVtG,EAAa,SAACpC,GAChB8I,EAAgBN,EAAQxI,IACxBgJ,EAAchJ,GACd4I,GAAY,IAKhB,OAHA3C,qBAAU,cAET,CAAC8C,IAEF,qCACA,cAACE,EAAA,EAAD,CAAgBzC,UAAW0C,IAA3B,SACM,eAACC,EAAA,EAAD,CAAO9G,GAAI,CAAE+G,SAAU,KAAO,aAAW,eAAzC,UACI,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,cAACC,EAAA,EAAD,UACKd,EAAQe,KAAI,SAACrH,GAAD,OACT,cAAC,EAAD,CAGEA,KAAMA,EACNC,WAAYA,EACZC,WAAYA,GAHPF,EAAKlC,cAS7ByI,EACG,cAAC,GAAD,CACApE,QACiB,IAAboE,EAEJnE,MA5CgB,WAChBoE,GAAY,IA4CZzD,OAAQ4D,EACRrE,QAASA,EACTD,KAAK,WAED,KACPoE,EACG,cAAC,GAAD,CACAtE,QACiB,IAAbsE,EAEJrE,MA/CgB,WAChBsE,GAAY,IA+CZ3D,OAAQ4D,EACRrE,QAASA,EACTD,KAAK,WAED,SCtENK,GAAmBC,IAAW,CAClChC,KAAMgC,IACI,6CACPC,SAAS,iCACZhC,MAAO+B,IACG,8CACPE,IAAI,EAAG,yBACPD,SAAS,kCACZ/B,IAAK8B,IACK,8CACPC,SAAS,oCAGR0E,GAAM,SAACxI,GACT,IAAQsD,EAAgBtD,EAAhBsD,MAAOC,EAASvD,EAATuD,KACf,EAAgCE,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAgCMO,EAASC,YAAU,CACrBC,cAAe,CACfvC,KAAM,GACNC,MAAO,GACPC,IAAK,IAEL6B,iBAAkBA,GAClBS,SAAU,SAACnD,GACPyC,GAAY,GACA,UAARJ,EAxBK,SAAC1B,EAAMC,EAAOC,GAC3B,IAAMuC,EAAMC,EAAWkE,KAAK,gBAAiB,CACzC5G,KAAMA,EACNC,MAAOA,EACPC,IAAKA,IAETuC,EAAIG,MAAK,SAACC,GACNrF,gBAAM,qCACNiE,OAEJgB,EAAIO,OAAM,SAACC,GACPzF,QAAMyF,MAAMA,EAAMC,YAchB2D,CAASxH,EAAKW,KAAMX,EAAKY,MAAOZ,EAAKa,KACpB,UAARwB,EAzCA,SAAC1B,EAAMC,EAAOC,GAC7B,IAAMuC,EAAMC,EAAWkE,KAAK,gBAAiB,CACzCzJ,GAAKgB,EAAMhB,GACX6C,KAAMA,EACNC,MAAOA,EACPC,IAAKA,IAETuC,EAAIG,MAAK,SAACC,GACNrF,gBAAM,qCACNiE,OAEJgB,EAAIO,OAAM,SAACC,GACPzF,QAAMyF,MAAMA,EAAMC,YA8BhBC,CAAW9D,EAAKW,KAAMX,EAAKY,MAAOZ,EAAKa,KAEvC1C,QAAMyF,MAAM,wBAKtB,OACG,cAACY,EAAA,EAAD,UACK,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACpH,MAAO,CAAEqH,eAAgB,SAAzC,SACI,cAACF,EAAA,EAAD,CAAMG,MAAM,EAAMC,GAAI,EAAGvH,MAAO,CAAGwH,cAAe,MAAlD,SACI,eAACkC,EAAA,EAAD,WACA,oBAAItG,MAAM,SAAV,sBAGA,uBAAMyC,SAAUH,EAAO+B,aAAvB,UACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTnH,GAAG,OACHoH,KAAK,OACLC,MAAM,cACNC,MAAOpC,EAAOqC,OAAO1E,KACrB2E,SAAUtC,EAAOuC,aACjB3B,MAAOZ,EAAOwC,QAAQ7E,MAAQtD,QAAQ2F,EAAOyC,OAAO9E,MACpD+E,WAAY1C,EAAOwC,QAAQ7E,MAAQqC,EAAOyC,OAAO9E,OAErD,cAACqE,EAAA,EAAD,CACIC,WAAS,EACTnH,GAAG,QACHoH,KAAK,QACLC,MAAM,QACN9C,KAAK,OACL+C,MAAOpC,EAAOqC,OAAOzE,MACrB0E,SAAUtC,EAAOuC,aACjB3B,MAAOZ,EAAOwC,QAAQ5E,OAASvD,QAAQ2F,EAAOyC,OAAO7E,OACrD8E,WAAY1C,EAAOwC,QAAQ5E,OAASoC,EAAOyC,OAAO7E,QAEtD,cAACoE,EAAA,EAAD,CACIC,WAAS,EACTnH,GAAG,MACHoH,KAAK,MACLC,MAAM,MACN9C,KAAK,OACL+C,MAAOpC,EAAOqC,OAAOxE,IACrByE,SAAUtC,EAAOuC,aACjB3B,MAAOZ,EAAOwC,QAAQ3E,KAAOxD,QAAQ2F,EAAOyC,OAAO5E,KACnD6E,WAAY1C,EAAOwC,QAAQ3E,KAAOmC,EAAOyC,OAAO5E,MAEpD,eAAC4D,EAAA,EAAD,CAAM/D,MAAM,QAAQkE,MAAM,EAAMtH,MAAO,CAACgE,WAAW,MAAnD,UACA,cAACqE,EAAA,EAAD,CAASC,SAAUpD,EAAUH,KAAK,SAASwD,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,UAAlG,kBAGA,cAACoI,EAAA,EAAD,CAAQlI,QAAS2E,EAAOyD,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,YAA/E,oCAYT+J,MAEfA,GAAIvB,aAAe,CACjBC,WAAY,KACZhG,KAAM,CAACkF,KAAM,IACbuC,QAAS,IC5HX,IA+EeC,GA/EG,WACd,IAAMC,EAAUC,cAChB,EAAoCrF,oBAAS,GAA7C,mBAAOsF,EAAP,KAAmBC,EAAnB,KACA,EAAgCvF,oBAAS,GAAzC,mBAAOwF,EAAP,KAAkBC,EAAlB,KACA,EAA0BzF,mBAAS,IAAnC,mBAAO0F,EAAP,KAAeC,EAAf,KAEMC,EAAU,WACA9E,EAAW+E,IAAI,iBACvB7E,MAAK,SAAC8E,GACN,IAAMC,EAAiB,GACvB,IAAK,IAAIC,KAAOF,EAAQrI,KACpBsI,EAAeE,QAAf,2BACOH,EAAQrI,KAAKuI,IADpB,IAEIzK,GAAIyK,EACJ9H,SAAU8H,KAGlB,IAAME,EAAM,GACZC,OAAOC,KAAKL,GAAgBjB,KAAI,SAACuB,GAC7BH,EAAII,KAAK,CACL/K,GAAIwK,EAAeM,GAAG9K,GACtB6C,KAAM2H,EAAeM,GAAGjI,KACxBC,MAAO0H,EAAeM,GAAGhI,MACzBC,IAAKyH,EAAeM,GAAG/H,IACvBJ,SAAUmI,OAGlBV,EAAQO,OAoBhB,OADA1E,qBAAU,WAAQoE,IANdW,YAAmBhM,GAAc,SAACiM,GAC7BA,GACLpB,EAAQkB,KAAK,UAIyB,IAEtC,eAACrE,EAAA,EAAD,WACI,cAACwC,EAAA,EAAD,CAAO1J,MAAO,CAACsE,gBAAgB,WAAYlB,MAAM,SAAjD,SACI,cAAC1D,EAAD,CAAQM,MAAO,CAAC0L,WAAY,sBAEhC,eAACvE,EAAA,EAAD,CAAM/D,MAAM,QAAQpD,MAAO,CAAEgE,WAAY,EAAGwD,cAAe,GAA3D,UACM+C,EAAa,cAAClC,EAAA,EAAD,CAAQ7H,GAAG,aAAaL,QAAS,WAlBxDuK,GAAW,GACXF,GAAc,IAmBDjC,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,UAF7C,sBAIH,KAEXwK,EACD,cAAC,GAAD,CACA5F,QACkB,IAAd4F,EAEIzF,QAAS6F,IACjB/F,MAnCW,WACnB4F,GAAW,GACXF,GAAc,IAkCNzF,KAAK,WAED,QAER,cAACoC,EAAA,EAAD,UACI,cAAC,GAAD,CACAnC,QAAS6F,EACT7B,QAAS2B,U,oBChBVgB,GA5DD,WACV,MAA0B1G,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KACA,EAAgC5G,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAA4B9G,oBAAS,GAArC,mBAAO+G,EAAP,KAAgBC,EAAhB,KACA,EAAwChH,mBAAS,IAAjD,mBAAOiH,EAAP,KAAqBC,EAArB,KACM9B,EAAUC,cAEV8B,EAAoB,SAACC,GACA,SAAnB,CAACA,EAAEC,OAAO1E,MACViE,EAASQ,EAAEC,OAAOxE,OACO,YAAlB,CAACuE,EAAEC,OAAO1E,OACjBmE,EAAYM,EAAEC,OAAOxE,QA0B7B,OACI,cAACZ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACpH,MAAO,CAAEqH,eAAgB,UAAzC,SACI,eAACF,EAAA,EAAD,CAAMG,MAAM,EAAMC,GAAI,EAAEvH,MAAO,CAAEgE,WAAY,OAA7C,UACI,oBAAIZ,MAAM,SAAV,mBAGC4I,EAAU,cAACO,GAAA,EAAD,CAAOC,SAAS,QAAQ/L,QAAS,WAAOwL,GAAS,IAAjD,SAA2DC,IAAwB,6BAC9F,uBAAMrG,SA5BD,SAACwG,GAClBA,EAAEI,iBACFC,aAA2BlN,EAAcoM,EAAOE,GAC3C7F,MAAK,SAAC0G,GACH,IAAMlB,EAAOkB,EAAelB,KAC5BtF,QAAQC,IAAIqF,GACY,GAApBA,EAAKmB,aACL/L,QAAMC,QAAQ,yBACduJ,EAAQkB,KAAK,gBAEbY,EAAgB,sBAChBF,GAAS,GACTzM,EAAaoB,cAElByF,OAAM,SAAAC,GACL6F,EAAgB7F,EAAMC,SACtB0F,GAAS,OAYL,UACI,eAACvC,EAAA,EAAD,WACA,cAAChC,EAAA,EAAD,CAAW3C,KAAK,OAAOO,UAAQ,EAACqC,WAAS,EAACY,OAAO,QAAQT,MAAO8D,EAAOhE,KAAK,QAAQI,SAAUoE,EAAmB9L,KAAK,SAASE,GAAG,iBAAiBqH,MAAM,QAAQW,QAAQ,aACzK,cAACd,EAAA,EAAD,CAAW3C,KAAK,WAAWO,UAAQ,EAACqC,WAAS,EAACY,OAAO,QAAQX,KAAK,WAAWE,MAAOgE,EAAU9D,SAAUoE,EAAmB9L,KAAK,SAASE,GAAG,iBAAiBqH,MAAM,WAAWW,QAAQ,gBAEtL,cAACH,EAAA,EAAD,CAAQtD,KAAK,SAAS4C,WAAS,EAACY,OAAO,QAAQjI,KAAK,SAASkI,QAAQ,YAAYvI,MAAM,UAAvF,8B,oBC1DlB4M,GAAe,CACnBC,OAAO,EACPC,SAAU,GAkBGC,GAfC,WAAmC,IAAlCC,EAAiC,uDAAzBJ,GAAcK,EAAW,uCAChD,MAAoB,iBAAhBA,EAAOnI,KACF,2BACFkI,GADL,IAEEH,MAAOI,EAAOpF,QAGE,mBAAhBoF,EAAOnI,KACF,2BACFkI,GADL,IAEEF,QAASG,EAAOpF,aAHpB,GCRWqF,GAAQC,aAAYJ,GAAQK,aAAgBC,O,iBCmB1CC,OAZf,WACE,OACE,eAAC,KAAD,CAAUJ,MAAOA,GAAjB,UACE,cAAC,iBAAD,CAAgBvJ,SAAS,cACzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4J,KAAK,aAAaxG,UAAWoD,KACpC,cAAC,IAAD,CAAOoD,KAAK,IAAIC,OAAK,EAACzG,UAAW2E,YCZzC+B,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5a44c9ac.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDt-wIIAK1aqm8fC9SnyIeGssA3kBEipYk\",\r\n  authDomain: \"assestment-patigeni.firebaseapp.com\",\r\n  projectId: \"assestment-patigeni\",\r\n  storageBucket: \"assestment-patigeni.appspot.com\",\r\n  messagingSenderId: \"948831086206\",\r\n  appId: \"1:948831086206:web:f084f86545cc66ca415a2f\",\r\n  measurementId: \"G-V75ZT53FGJ\",\r\n};\r\n\r\nconst init = initializeApp(firebaseConfig);\r\n\r\nexport const firebaseAuth = getAuth(init);\r\n\r\n\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { firebaseAuth } from '../../config/firebase/firebaseAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Navbar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleLogout = () => {\r\n    firebaseAuth.signOut()\r\n     toast.success(\"Logout Successfully!!!\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{color:\"white\"}}\r\n        aria-controls=\"basic-menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n              onClick={handleClick}\r\n              size=\"large\"\r\n      >\r\n        Dashboard\r\n      </Button>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableRowRoot: {\r\n    '& th': {\r\n      fontSize: 13,\r\n      padding: 10,\r\n      '&:first-child': {\r\n        paddingLeft: 20,\r\n      },\r\n      '&:last-child': {\r\n        paddingRight: 0,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst TableHeading = (props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <TableRow className={classes.tableRowRoot}>\r\n      <TableCell\r\n        style={{\r\n          width: 60,\r\n        }}>\r\n        Actions\r\n      </TableCell>\r\n      <TableCell\r\n        style={{\r\n          maxWidth: 1200,\r\n        }}>\r\n       Nama Barang\r\n      </TableCell>\r\n      <TableCell\r\n        style={{\r\n          maxWidth: 1200,\r\n        }}>\r\n       Harga\r\n      </TableCell>\r\n      <TableCell\r\n        style={{\r\n          maxWidth: 1200,\r\n        }}>\r\n        Qty\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableHeading;\r\n","import {makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableCell: {\r\n    fontSize: 13,\r\n    padding: 8,\r\n    whiteSpace: 'nowrap',\r\n    '&:first-child': {\r\n      paddingLeft: 20,\r\n    },\r\n    '&:last-child': {\r\n      paddingRight: 20,\r\n    },\r\n  },\r\n  whiteSpace: {\r\n    whiteSpace: 'no-wrap',\r\n  },\r\n  anchar: {\r\n    color: theme.palette.primary.main,\r\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\r\n    display: 'inline-block',\r\n  },\r\n  badgeRoot: {\r\n    padding: '3px 10px',\r\n    borderRadius: 4,\r\n    display: 'inline-block',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport PropTypes from 'prop-types';\r\nimport useStyles from './TableItem.style';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ModeEditOutlineIcon from '@mui/icons-material/ModeEditOutline';\r\n\r\nconst TableItem = ({data , openUpdate, openDelete}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableRow\r\n        key={data.id}\r\n        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n    >\r\n        <TableCell>\r\n        <Stack direction=\"row\" spacing={1}>\r\n            <IconButton aria-label=\"delete\" onClick={() => {\r\n                    openDelete(data.selected)\r\n                }}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"edit\" onClick={() => {\r\n                    openUpdate(data.selected)\r\n                }}>\r\n                <ModeEditOutlineIcon />\r\n            </IconButton>\r\n        </Stack>\r\n        </TableCell>\r\n        <TableCell align=\"left\">{data.nama}</TableCell>\r\n        <TableCell align=\"left\">{data.harga}</TableCell>\r\n        <TableCell align=\"left\">{data.qty}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n\r\nTableItem.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL:\"https://assestment-patigeni-default-rtdb.asia-southeast1.firebasedatabase.app\"\r\n})\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport * as yup from 'yup';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport { Button, Container, Grid, Paper, TextField } from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { toast } from 'react-toastify';\r\nimport firebaseDB from '../../config/firebase/firebaseDB';\r\nimport { Box } from '@mui/system';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogBox: {\r\n    position: 'relative',\r\n    '& .MuiDialog-paperWidthSm': {\r\n      maxWidth: 600,\r\n      width: '100%',\r\n    },\r\n    '& .MuiTypography-h6': {\r\n    },\r\n  },\r\n  formRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingTop: 20,\r\n    [theme.breakpoints.up('xl')]: {},\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  textareaAutosizeRoot: {\r\n    width: '100%',\r\n    border: '0 none',\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  btnRoot: {\r\n    paddingLeft: 32,\r\n    paddingRight: 32,\r\n  },\r\n  scrollRoot: {\r\n    height: 550,\r\n  },\r\n}));\r\n\r\nconst Edit = (props) => {\r\n    const { isOpen, close, type, refresh } = props;\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n    const validationSchema = yup.object({\r\n    nama: yup\r\n        .string('Field nama hanya bisa di isi dengan huruf')\r\n        .required('Field nama tidak boleh kosong'),\r\n    harga: yup\r\n        .number('Field harga hanya bisa di isi dengan angka')\r\n        .min(3, 'Harga minimal ratusan')\r\n        .required('Field harga tidak boleh kosong'),\r\n    qty: yup\r\n        .number('Field harga hanya bisa di isi dengan angka')\r\n        .required('Field harga tidak boleh kosong'),\r\n    });\r\n    const idBarang = props.barang.id;\r\n    const updateData = (nama, harga, qty ) => {\r\n        const res = firebaseDB.put('/barangs/'+idBarang+'.json', {\r\n            nama: nama,\r\n            harga: harga,\r\n            qty: qty,\r\n        });\r\n        res.then((result) => {\r\n            console.log(result);\r\n            toast(\"Data barang berhasil di Diedit\")\r\n            close();\r\n            refresh();\r\n        })\r\n        res.catch((error) => {\r\n            toast.error(error.message)\r\n        })\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n        nama:  props.barang.nama\r\n              ? props.barang.nama\r\n              : '',\r\n        harga: props.barang.harga\r\n              ? props.barang.harga : '',\r\n        qty: props.barang.qty\r\n              ? props.barang.qty : '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (data) => {\r\n            setIsSubmit(true);\r\n            if (type == 'update') {\r\n              updateData(data.nama, data.harga, data.qty);\r\n            } else {\r\n              toast.error('Not Selected Type');\r\n            }\r\n        },\r\n    });\r\n    \r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      onClose={() => close()}\r\n      aria-labelledby='simple-modal-title'\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Box\r\n        py={2}\r\n        px={4}\r\n        display='flex'\r\n        flexDirection='row'\r\n        alignItems='center'\r\n        borderBottom={`1px solid ${grey[300]}`}>\r\n        <Box component='h2' mb={0}>\r\n         Update\r\n        </Box>\r\n      </Box>\r\n        <Container>\r\n            <Grid container style={{ justifyContent: \"center\" }}>\r\n                <Grid item={true} xs={12} style={{  paddingBottom: \"1%\"}}>\r\n            \r\n                     <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"nama\"\r\n                            name=\"nama\"\r\n                            label=\"Nama Barang\"\r\n                            value={formik.values.nama}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.nama && Boolean(formik.errors.nama)}\r\n                            helperText={formik.touched.nama && formik.errors.nama}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"harga\"\r\n                            name=\"harga\"\r\n                            label=\"Harga\"\r\n                            type=\"text\"\r\n                            value={formik.values.harga}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.harga && Boolean(formik.errors.harga)}\r\n                            helperText={formik.touched.harga && formik.errors.harga}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"qty\"\r\n                            name=\"qty\"\r\n                            label=\"Qty\"\r\n                            type=\"text\"\r\n                            value={formik.values.qty}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.qty && Boolean(formik.errors.qty)}\r\n                            helperText={formik.touched.qty && formik.errors.qty}\r\n                        />\r\n                        <Grid align=\"right\" item={true} style={{paddingTop:\"2%\"}}>\r\n                        <Button  disabled={isSubmit} type=\"submit\" margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"primary\">\r\n                            Send\r\n                            </Button>\r\n                        <Button onClick={close} margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        </Grid>\r\n                        </form>\r\n                \r\n                </Grid>\r\n            </Grid>\r\n        </Container> \r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n\r\nEdit.defaultProps = {\r\n  connection: null,\r\n  data: {name: ''},\r\n  barang: '',\r\n};","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {grey} from '@material-ui/core/colors';\r\nimport { Button, Container, Grid, Typography } from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport firebaseDB from '../../config/firebase/firebaseDB';\r\nimport { Box } from '@mui/system';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogBox: {\r\n    position: 'relative',\r\n    '& .MuiDialog-paperWidthSm': {\r\n      maxWidth: 600,\r\n      width: '100%',\r\n    },\r\n    '& .MuiTypography-h6': {\r\n    },\r\n  },\r\n  formRoot: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingTop: 20,\r\n    [theme.breakpoints.up('xl')]: {},\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  textareaAutosizeRoot: {\r\n    width: '100%',\r\n    border: '0 none',\r\n    backgroundColor: theme.palette.background.paper,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  btnRoot: {\r\n    paddingLeft: 32,\r\n    paddingRight: 32,\r\n  },\r\n  scrollRoot: {\r\n    height: 550,\r\n  },\r\n}));\r\n\r\nconst Delete = (props) => {\r\n    const { isOpen, close, refresh } = props;\r\n    const idBarang = props.barang.id;\r\n    const deleteData = () => {\r\n        const res = firebaseDB.delete('/barangs/'+idBarang+'.json');\r\n        res.then((result) => {\r\n            // console.log(result);\r\n            toast(\"Data barang berhasil di dihapus\")\r\n            close();\r\n            refresh();\r\n        })\r\n        res.catch((error) => {\r\n            toast.error(error.message)\r\n        })\r\n    }\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      onClose={() => close()}\r\n      aria-labelledby='simple-modal-title'\r\n      aria-describedby='simple-modal-description'\r\n      className={classes.dialogBox}>\r\n      <Box\r\n        py={2}\r\n        px={4}\r\n        display='flex'\r\n        flexDirection='row'\r\n        alignItems='center'\r\n        borderBottom={`1px solid ${grey[300]}`}>\r\n        <Box component='h2' mb={0}>\r\n         Delete\r\n        </Box>\r\n      </Box>\r\n      <Container>\r\n        <Typography style={{fontStyle:'italic'}}>\r\n        Apa anda yakin akan menghapus data barang {props.barang.nama} dengan jumlah barang {props.barang.qty}pc ?\r\n        </Typography>\r\n        <Grid align=\"right\" item={true} style={{paddingTop:\"2%\", paddingBottom:\"4%\"}}>\r\n        <Button onClick={deleteData} margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"secondary\">\r\n            Delete\r\n        </Button>\r\n        <Button onClick={close} margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"inherit\">\r\n            Cancel\r\n        </Button>\r\n        </Grid>\r\n      </Container>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n\r\nDelete.defaultProps = {\r\n  connection: null,\r\n  data: {name: ''},\r\n  barang: '',\r\n};","import React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport Paper from '@mui/material/Paper';\r\nimport TableHeading from './table/TableHeading';\r\nimport TableItem from './table/TableItem';\r\nimport { TableHead } from '@material-ui/core';\r\nimport Edit from './Edit';\r\nimport Delete from './Delete';\r\n\r\nconst Read = ({dataArr, refresh}) => {\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [selectedId, setSelectedId] = useState();\r\n\r\n    const closeUpdate = () => {\r\n        setIsUpdate(false);\r\n    };\r\n    const openUpdate = (id) => {\r\n        setSelectedData(dataArr[id]);\r\n        setSelectedId(id);\r\n        setIsUpdate(true);\r\n    };\r\n    const closeDelete = () => {\r\n        setIsDelete(false);\r\n    };\r\n    const openDelete = (id) => {\r\n        setSelectedData(dataArr[id]);\r\n        setSelectedId(id);\r\n        setIsDelete(true);\r\n    };\r\n    useEffect(() => {\r\n    // console.log(selectedData);\r\n  }, [selectedId]);\r\n    return (\r\n    <>\r\n    <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableHeading/>\r\n              </TableHead>\r\n              <TableBody>\r\n                  {dataArr.map((data) => (\r\n                      <TableItem\r\n                          \r\n                        key={data.id}\r\n                        data={data}\r\n                        openUpdate={openUpdate}\r\n                        openDelete={openDelete}\r\n                      />\r\n                    ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    {isUpdate ? (\r\n        <Edit\r\n        isOpen={\r\n            isUpdate === true \r\n                }\r\n        close={closeUpdate}\r\n        barang={selectedData}\r\n        refresh={refresh}\r\n        type='update'\r\n        />\r\n        ) : null}\r\n    {isDelete ? (\r\n        <Delete\r\n        isOpen={\r\n            isDelete === true \r\n                }\r\n        close={closeDelete}\r\n        barang={selectedData}\r\n        refresh={refresh}\r\n        type='delete'\r\n        />\r\n        ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Read;\r\n","import { Button, Container, Grid, Paper, TextField } from '@material-ui/core';\r\nimport React,{useState} from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport firebaseDB from '../../config/firebase/firebaseDB';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst validationSchema = yup.object({\r\n  nama: yup\r\n    .string('Field nama hanya bisa di isi dengan huruf')\r\n    .required('Field nama tidak boleh kosong'),\r\n  harga: yup\r\n    .number('Field harga hanya bisa di isi dengan angka')\r\n    .min(3, 'Harga minimal ratusan')\r\n    .required('Field harga tidak boleh kosong'),\r\n  qty: yup\r\n    .number('Field harga hanya bisa di isi dengan angka')\r\n    .required('Field harga tidak boleh kosong'),\r\n});\r\n\r\nconst Add = (props) => {\r\n    const { close, type } = props;\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n    const updateData = (nama, harga, qty ) => {\r\n        const res = firebaseDB.post(\"/barangs.json\", {\r\n            id : props.id,\r\n            nama: nama,\r\n            harga: harga,\r\n            qty: qty,\r\n        });\r\n        res.then((result) => {\r\n            toast(\"Data barang berhasil di tambahkan\")\r\n            close();\r\n        })\r\n        res.catch((error) => {\r\n            toast.error(error.message)\r\n        })\r\n    }\r\n    const saveData = (nama, harga, qty ) => {\r\n        const res = firebaseDB.post(\"/barangs.json\", {\r\n            nama: nama,\r\n            harga: harga,\r\n            qty: qty,\r\n        });\r\n        res.then((result) => {\r\n            toast(\"Data barang berhasil di tambahkan\")\r\n            close();\r\n        })\r\n        res.catch((error) => {\r\n            toast.error(error.message)\r\n        })\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n        nama: '',\r\n        harga: '',\r\n        qty: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (data) => {\r\n            setIsSubmit(true);\r\n            if (type == 'create') {\r\n              saveData(data.nama, data.harga, data.qty);\r\n            } else if (type == 'update') {\r\n              updateData(data.nama, data.harga, data.qty);\r\n            } else {\r\n              toast.error('Not Selected Type');\r\n            }\r\n        },\r\n    });\r\n    \r\n    return (\r\n       <Container>\r\n            <Grid container style={{ justifyContent: \"right\" }}>\r\n                <Grid item={true} xs={4} style={{  paddingBottom: \"1%\"}}>\r\n                    <Paper>\r\n                    <h2 align=\"center\">\r\n                    New Data\r\n                    </h2>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"nama\"\r\n                            name=\"nama\"\r\n                            label=\"Nama Barang\"\r\n                            value={formik.values.nama}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.nama && Boolean(formik.errors.nama)}\r\n                            helperText={formik.touched.nama && formik.errors.nama}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"harga\"\r\n                            name=\"harga\"\r\n                            label=\"Harga\"\r\n                            type=\"text\"\r\n                            value={formik.values.harga}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.harga && Boolean(formik.errors.harga)}\r\n                            helperText={formik.touched.harga && formik.errors.harga}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"qty\"\r\n                            name=\"qty\"\r\n                            label=\"Qty\"\r\n                            type=\"text\"\r\n                            value={formik.values.qty}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.qty && Boolean(formik.errors.qty)}\r\n                            helperText={formik.touched.qty && formik.errors.qty}\r\n                        />\r\n                        <Grid align=\"right\" item={true} style={{paddingTop:\"2%\"}}>\r\n                        <Button  disabled={isSubmit} type=\"submit\" margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"primary\">\r\n                            Send\r\n                            </Button>\r\n                        <Button onClick={close} margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"secondary\">\r\n                            Cancel\r\n                        </Button>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n                </Grid>\r\n            </Grid>\r\n         </Container>   \r\n    )\r\n}\r\n\r\nexport default Add;\r\n\r\nAdd.defaultProps = {\r\n  connection: null,\r\n  data: {name: ''},\r\n  barangs: '',\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Container, Grid, Paper, Button } from '@material-ui/core';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { firebaseAuth } from '../config/firebase/firebaseAuth';\r\nimport Navbar from './layout/Navbar';\r\nimport Read from './crud/Read';\r\nimport { useHistory } from 'react-router';\r\nimport Add from './crud/Add'\r\nimport firebaseDB from '../config/firebase/firebaseDB';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const history = useHistory();\r\n    const [hideButton, setHideButton] = useState(true)\r\n    const [isOpenAdd, setOpenAdd] = useState(false)\r\n    const [isData, setData] = useState([])\r\n\r\n    const getData = () => {\r\n        const res = firebaseDB.get(\"/barangs.json\");\r\n        res.then((results) => {\r\n            const fetchedResults = [];\r\n            for (let key in results.data) {\r\n                fetchedResults.unshift({\r\n                    ...results.data[key],\r\n                    id: key,\r\n                    selected: key,\r\n                })\r\n            }\r\n            const arr = []\r\n            Object.keys(fetchedResults).map((t) => {\r\n                arr.push({\r\n                    id: fetchedResults[t].id,\r\n                    nama: fetchedResults[t].nama,\r\n                    harga: fetchedResults[t].harga,\r\n                    qty: fetchedResults[t].qty,\r\n                    selected: t\r\n                })\r\n            })\r\n            setData(arr)\r\n        })\r\n    }\r\n    const handleCloseAdd = () => {\r\n        setOpenAdd(false);\r\n        setHideButton(true)\r\n    };\r\n    const handleOpenAdd = () => {\r\n        setOpenAdd(true);\r\n        setHideButton(false)\r\n    };\r\n    \r\n    const isAdmin = () => {\r\n        onAuthStateChanged(firebaseAuth, (user) => {\r\n        if (!user) {\r\n        history.push('/')\r\n        }});\r\n    }\r\n   \r\n    useEffect(() => { getData(); isAdmin(); },[]);\r\n    return (\r\n        <Container>\r\n            <Paper style={{backgroundColor:\"#1b211d\"}} align=\"center\">\r\n                <Navbar style={{fontFamily: 'Raleway, Arial'}}></Navbar>\r\n            </Paper>\r\n            <Grid align=\"right\" style={{ paddingTop: 4, paddingBottom: 4 }}>\r\n                { hideButton ? <Button id=\"button-add\" onClick={() => {\r\n                    handleOpenAdd();\r\n                  }} margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"primary\">\r\n                        New Data\r\n                </Button> : null }\r\n                \r\n                {isOpenAdd ? (\r\n                <Add\r\n                isOpen={\r\n                    isOpenAdd === true \r\n                        }\r\n                        refresh={getData()}\r\n                close={handleCloseAdd}\r\n                type='create'\r\n                />\r\n                ) : null}\r\n            </Grid>\r\n            <Grid>\r\n                <Read\r\n                refresh={getData}\r\n                dataArr={isData}\r\n                />\r\n            </Grid>\r\n        </Container>\r\n    )   \r\n}\r\nexport default Dashboard;","import React, {  useState} from 'react'\r\nimport { Button, Container, Grid, Paper, TextField } from '@material-ui/core'\r\nimport { signInWithEmailAndPassword } from '@firebase/auth';\r\nimport { Alert } from '@mui/material';\r\nimport { useHistory } from 'react-router';\r\nimport { firebaseAuth } from '../config/firebase/firebaseAuth';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Login = () => {    \r\n    const [email, setEmail] = useState([]);\r\n    const [password, setPassword] = useState([]);\r\n    const [isAlert, setAlert] = useState(false);\r\n    const [alertContent, setAlertContent] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleChangeField = (e) => {\r\n        if ([e.target.name] == \"email\") {\r\n            setEmail(e.target.value);\r\n        } else if ([e.target.name]== \"password\") {\r\n            setPassword(e.target.value);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        signInWithEmailAndPassword(firebaseAuth, email, password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                console.log(user)\r\n                if (user.isAnonymous == false) {\r\n                    toast.success(\"Login Successfully!!!\");\r\n                    history.push('/dashboard');\r\n                } else {\r\n                    setAlertContent(\"User is Anonymus!!\");\r\n                    setAlert(true);\r\n                    firebaseAuth.signOut();\r\n                }\r\n            }).catch(error => { \r\n                setAlertContent(error.message);\r\n                setAlert(true);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container style={{ justifyContent: \"center\" }}>\r\n                <Grid item={true} xs={4}style={{ paddingTop: \"20%\" }}>\r\n                    <h2 align=\"center\">\r\n                    LOGIN\r\n                    </h2>\r\n                    {isAlert ? <Alert severity='error' onClose={() => {setAlert(false)}}>{alertContent}</Alert> : <></> }\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Paper>\r\n                        <TextField type=\"text\" required fullWidth margin=\"dense\" value={email} name=\"email\" onChange={handleChangeField} size=\"medium\" id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\r\n                        <TextField type=\"password\" required fullWidth margin=\"dense\" name=\"password\" value={password} onChange={handleChangeField} size=\"medium\" id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" />\r\n                        </Paper>\r\n                        <Button type=\"submit\" fullWidth margin=\"dense\" size=\"medium\" variant=\"contained\" color=\"primary\">\r\n                            Login\r\n                        </Button>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n         </Container>    \r\n        )\r\n}\r\n\r\nexport default Login;\r\n","const initialState = {\r\n  popup: false,\r\n  isLogin : false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === 'CHANGE_POPUP') {\r\n    return {\r\n      ...state,\r\n      popup: action.value\r\n    }\r\n  }\r\n  if (action.type === 'CHANGE_ISLOGIN') {\r\n    return {\r\n      ...state,\r\n      isLogin: action.value\r\n    }\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport reducer from \"./Reducer\";\r\n\r\nexport const store = createStore(reducer,applyMiddleware(thunk));\r\n","import \"./App.css\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport {store} from \"./config/redux/Store\";\nimport { Provider } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastContainer position=\"top-right\"/>\n      <Router>\n        <Route path=\"/dashboard\" component={Dashboard}/>\n        <Route path=\"/\" exact component={Login}/>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}